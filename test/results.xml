<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="6" time="0.901" timestamp="2021-03-25T13:54:01.539349" hostname="DESKTOP-8CRFPV3"><testcase classname="test.test_dtv" name="test_dtv_init" time="0.377" /><testcase classname="test.test_dtv" name="test_dtv_signal_connection" time="0.035" /><testcase classname="test.test_dtv" name="test_path_dict" time="0.036"><failure message="AssertionError: path-dict is len16 but data-dict has 14 keys&#10;assert 16 == 14&#10; +  where 16 = len({&quot;root['Age']&quot;: {'data/value': 21, 'name_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E34BA0&gt;, 'row': 1, 't...ect at 0x00000200E4E83580&gt;, 'row': 0, 'type_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E835F0&gt;, ...}, ...})&#10; +    where {&quot;root['Age']&quot;: {'data/value': 21, 'name_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E34BA0&gt;, 'row': 1, 't...ect at 0x00000200E4E83580&gt;, 'row': 0, 'type_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E835F0&gt;, ...}, ...} = &lt;dicttotreeview.classes.MyTree object at 0x00000200E4E87E50&gt;.path_dict&#10; +      where &lt;dicttotreeview.classes.MyTree object at 0x00000200E4E87E50&gt; = &lt;dicttotreeview.classes.DictToTreeView object at 0x00000200E4E47AF0&gt;.tree&#10; +  and   14 = iteration({'Age': 21, 'Name': 'Elena', 'book': {'title': 'This'}, 'boxes': [{'Age': 21, 'Name': 'Elena'}, 2.5, 287], ...})&#10; +    where {'Age': 21, 'Name': 'Elena', 'book': {'title': 'This'}, 'boxes': [{'Age': 21, 'Name': 'Elena'}, 2.5, 287], ...} = &lt;test_dtv.Sensor_standard object at 0x00000200E4E47CA0&gt;.data_dict">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x00000200E4E81BE0&gt;

    def test_path_dict(qtbot):
        """
        Testing the length of path dict, -&gt;everything was read
        Every test-sensor from above is used.
        """
        sensor1 = Sensor_standard()
        treeview = QtWidgets.QTreeView()
        dtv1 = DictToTreeView(sensor1.data_dict,treeview)
        sensor2 = Sensor_parameter()
        treeview = QtWidgets.QTreeView()
        dtv2 = DictToTreeView(sensor2.data_dict,treeview)
&gt;       assert len(dtv1.tree.path_dict) == iteration(sensor1.data_dict), "path-dict is len{} but data-dict has {} keys".format(len(dtv1.tree.path_dict),iteration(sensor1.data_dict))
E       AssertionError: path-dict is len16 but data-dict has 14 keys
E       assert 16 == 14
E        +  where 16 = len({"root['Age']": {'data/value': 21, 'name_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E34BA0&gt;, 'row': 1, 't...ect at 0x00000200E4E83580&gt;, 'row': 0, 'type_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E835F0&gt;, ...}, ...})
E        +    where {"root['Age']": {'data/value': 21, 'name_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E34BA0&gt;, 'row': 1, 't...ect at 0x00000200E4E83580&gt;, 'row': 0, 'type_index': &lt;PyQt5.QtCore.QModelIndex object at 0x00000200E4E835F0&gt;, ...}, ...} = &lt;dicttotreeview.classes.MyTree object at 0x00000200E4E87E50&gt;.path_dict
E        +      where &lt;dicttotreeview.classes.MyTree object at 0x00000200E4E87E50&gt; = &lt;dicttotreeview.classes.DictToTreeView object at 0x00000200E4E47AF0&gt;.tree
E        +  and   14 = iteration({'Age': 21, 'Name': 'Elena', 'book': {'title': 'This'}, 'boxes': [{'Age': 21, 'Name': 'Elena'}, 2.5, 287], ...})
E        +    where {'Age': 21, 'Name': 'Elena', 'book': {'title': 'This'}, 'boxes': [{'Age': 21, 'Name': 'Elena'}, 2.5, 287], ...} = &lt;test_dtv.Sensor_standard object at 0x00000200E4E47CA0&gt;.data_dict

test_dtv.py:94: AssertionError</failure></testcase><testcase classname="test.test_dtv" name="test_dtv_compare" time="0.007" /><testcase classname="test.test_dtv" name="test_insertItem" time="0.024" /><testcase classname="test.test_dtv" name="test_path_column" time="0.020"><failure message="assert [&quot;root['Name'...rs'][1]&quot;, ...] == [&quot;root['Name'...rs'][1]&quot;, ...]&#10;  At index 12 diff: &quot;root['boxes'][0]['Name']&quot; != &quot;root['boxes'][1]&quot;&#10;  Left contains 2 more items, first extra item: &quot;root['boxes'][1]&quot;&#10;  Use -v to get the full diff">qtbot = &lt;pytestqt.qtbot.QtBot object at 0x00000200E9347910&gt;

    def test_path_column(qtbot):
        """
        Compares if the hidden column 4 is the same as the keys of the generated path dict.
        """
        sensor1 = Sensor_standard()
        treeview = QtWidgets.QTreeView()
        dtv = DictToTreeView(sensor1.data_dict,treeview)
    
        forthC = []
        forthC = path_column(dtv.tree.standard_model, forthC)
        #assertion error raised automatically
&gt;       assert list(dtv.tree.path_dict) == forthC
E       assert ["root['Name'...rs'][1]", ...] == ["root['Name'...rs'][1]", ...]
E         At index 12 diff: "root['boxes'][0]['Name']" != "root['boxes'][1]"
E         Left contains 2 more items, first extra item: "root['boxes'][1]"
E         Use -v to get the full diff

test_dtv.py:458: AssertionError</failure></testcase></testsuite></testsuites>